{"version":3,"sources":["redux/actionTypes.js","redux/reducers/usedData.js","redux/reducers/facturen.js","redux/reducers/domains.js","redux/reducers/databases.js","redux/reducers/mailboxes.js","redux/reducers/index.js","redux/store.js","GLOBALVAR.js","components/Login.jsx","components/includes/Header.jsx","redux/actions.js","components/includes/Aside.jsx","components/includes/Footer.jsx","components/pages/Dashboard.jsx","components/pages/Facturen.jsx","components/pages/Databases.jsx","components/pages/Domains.jsx","components/pages/Mailboxes.jsx","components/Index.jsx","App.js","index.js"],"names":["SET_USEDDATA","SET_DOMAINS","SET_DATABASES","SET_MAILBOXES","SET_FACTUREN","initialState","usedData","state","action","type","payload","response","facturen","domains","databases","mailboxes","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","IP","Login","props","useState","username","setUsername","password","setPassword","loginbutton","setloginbutton","infoBox","setInfoBox","infoBoxClassName","setInfoBoxClassName","passwordClassName","setPasswordClassName","e","a","preventDefault","length","fetch","method","mode","headers","body","request","console","log","status","setCurrentScreen","useEffect","redirect","referrerPolicy","getLoggedInState","className","onSubmit","htmlFor","autoFocus","id","placeholder","value","onChange","target","href","Header","alert","role","aria-label","src","width","height","alt","aria-expanded","data-target","aria-hidden","to","rel","onClick","logOut","getDatabases","dispatch","getState","json","connect","setUsedData","getUsedData","usedDataText","setUsedDataText","usedDataSliderValue","setUsedDataSliderValue","usedDataSliderMax","setUsedDataSliderMax","usedDataSliderClass","setUsedDataSliderClass","usedDirSize","maxDirSize","percentage","handleUsedData","max","Footer","getDomains","chart","setChart","setDomains","setDatabases","returnLi","liArray","map","Element","chartType","loader","data","folderUsedDirSize","options","title","sliceVisibilityThreshold","rootProps","getFacturen","setFacturen","currentfactuur","setCurrentfactuur","modalActive","setModalActive","getDate","timestamp","monthIncrease","t","split","d","Date","UTC","month","getMonth","getDay","getFullYear","totalPrice","userinfo","firstName","lastName","adress","number","zipcode","city","country","date","products","element","price","amount","productname","replace","toFixed","elem","mywindow","open","document","write","getElementById","innerHTML","close","focus","print","PrintElem","modal","payed","Domains","Mailboxes","Index","path","App","currentScreen","bind","A","this","setState","React","Component","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.7ded3079.chunk.js","sourcesContent":["export const SET_USEDDATA = \"SET_USEDDATA\";\r\nexport const SET_DOMAINS = \"SET_DOMAINS\";\r\nexport const SET_DATABASES = \"SET_DATABASES\";\r\nexport const SET_MAILBOXES = \"SET_MAILBOXES\";\r\nexport const SET_FACTUREN = \"SET_FACTUREN\";","import { SET_USEDDATA } from \"../actionTypes\";\r\n\r\nconst initialState = \"no Data\";\r\n\r\nconst usedData = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USEDDATA: {\r\n      return action.payload.response;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default usedData;\r\n","import { SET_FACTUREN } from \"../actionTypes\";\r\n\r\nconst initialState = \"no Data\";\r\n\r\nconst facturen = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_FACTUREN: {\r\n      return action.payload.response;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default facturen;\r\n","import { SET_DOMAINS } from \"../actionTypes\";\r\n\r\nconst initialState = \"no Data\";\r\n\r\nconst domains = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DOMAINS: {\r\n      return action.payload.response;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default domains;\r\n","import { SET_DATABASES } from \"../actionTypes\";\r\n\r\nconst initialState = \"no Data\";\r\n\r\nconst databases = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATABASES: {\r\n      return action.payload.response;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default databases;\r\n","import { SET_MAILBOXES } from \"../actionTypes\";\r\n\r\nconst initialState = \"no Data\";\r\n\r\nconst mailboxes = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MAILBOXES: {\r\n      return action.payload.response;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default mailboxes;\r\n","import { combineReducers } from \"redux\";\r\nimport usedData from \"./usedData\";\r\nimport facturen from \"./facturen\";\r\nimport domains from \"./domains\";\r\nimport databases from \"./databases\";\r\nimport mailboxes from \"./mailboxes\";\r\n\r\n\r\nexport default combineReducers({ usedData, facturen, domains, databases, mailboxes });\r\n","import { createStore, compose ,applyMiddleware  } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport default createStore(\r\n    rootReducer,\r\n    // applyMiddleware(thunk),\r\n    composeEnhancer(applyMiddleware(thunk)),\r\n  );\r\n createStore(rootReducer);\r\n","// export let IP = \"http://Localhost/a_routes/\";\r\nexport let IP = \"https://klanten.foxels.nl/a_routes/\";","import React, { useState, useEffect } from 'react';\r\n\r\n/**\r\n * This function handles the login page. \r\n *\r\n * @author Robert Boudewijn\r\n * @date 2021/01/20\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nfunction Login(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginbutton, setloginbutton] = useState(\"button is-block is-primary is-fullwidth\");\r\n  const [infoBox, setInfoBox] = useState(\"Please enter your email and password.\");\r\n  const [infoBoxClassName, setInfoBoxClassName] = useState(\"title has-text-grey is-5\");\r\n  const [passwordClassName, setPasswordClassName] = useState(\"input\");\r\n\r\n  useEffect(() => {\r\n    /**\r\n       *  Checks if the user is allready logged on.\r\n       *  @author Robert Boudewijn\r\n       *  @date 2020-01-19\r\n       *  @async\r\n       *  @params None\r\n       *  @return None\r\n       */\r\n    async function getLoggedInState() {\r\n      let request = await fetch(props.IP + \"session.php\",\r\n        {\r\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n          // mode: 'cors',\r\n          // cache: 'no-cache',\r\n          // credentials: 'same-origin',\r\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n          redirect: 'follow',\r\n          referrerPolicy: 'no-referrer'\r\n        }\r\n      );\r\n      if (request.status === 200) {\r\n        props.setCurrentScreen(\"index\");\r\n      } else if (request.status === 401) {\r\n        //nothing user is not logged on so...\r\n      }\r\n    }\r\n    getLoggedInState();\r\n  }, [props]);\r\n\r\n\r\n\r\n  /**\r\n   * Handle username change. \r\n   *\r\n   * @author Robert Boudewijn\r\n   * @date 2021/01/20\r\n   * @param {*} e\r\n   */\r\n  function handleUsernameChange(e) {\r\n    setUsername(e.target.value);\r\n  }\r\n  /**\r\n   * Handle password change.\r\n   *\r\n   * @author Robert Boudewijn\r\n   * @date 2021/01/20\r\n   * @param {*} e\r\n   */\r\n  function handlePasswordChange(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  /**\r\n   *This function handles a submit of the form. And makes a fetch request to the server to authenticate.\r\n   *\r\n   * @author Robert Boudewijn\r\n   * @date 2021/01/20\r\n   * @param {*} e\r\n   */\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (password.length >= 8) {\r\n      setloginbutton(\"button is-block is-primary is-fullwidth is-loading\");\r\n      try {\r\n        let request = await fetch(props.IP + \"session.php\", {\r\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n          mode: 'cors',\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n          body: \"username=\" + username + \"&password=\" + password,\r\n        }\r\n        );\r\n        console.log(request)\r\n        if (request.status === 200) {\r\n          setloginbutton(\"button is-block is-success is-fullwidth\");\r\n          props.setCurrentScreen(\"index\");\r\n        } else if (request.status === 500) {\r\n          setInfoBox(\"There was an error.\");\r\n          setloginbutton(\"button is-block is-primary is-fullwidth\");\r\n        } else {\r\n          setInfoBox(\"Account not found or incorrect password.\");\r\n          setInfoBoxClassName(\"title has-text-danger is-5\");\r\n          setloginbutton(\"button is-block is-danger is-fullwidth\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n        setInfoBox(\"There was an error.\");\r\n        setloginbutton(\"button is-block is-primary is-fullwidth\");\r\n      }\r\n    } else {\r\n      setInfoBox(\"Password must be longer than 7 characters.\");\r\n      setInfoBoxClassName(\"title has-text-danger is-5\");\r\n      setPasswordClassName(\"input is-danger\");\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"hero is-primary is-fullheight\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <div className=\"columns\">\r\n            <div className=\"column\" />\r\n            <div className=\"column is-4 has-text-centered\">\r\n              <h3 className=\"title has-text-white\">Login</h3>\r\n              <hr className=\"login-hr\" />\r\n              <p className=\"subtitle has-text-white\">Login to your manager</p>\r\n              <div className=\"box\">\r\n                <div className={infoBoxClassName}>{infoBox}</div>\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"field\">\r\n                    <label className=\"label has-text-left\" htmlFor=\"username\">Username</label>\r\n                    <div className=\"control has-icons-left\">\r\n                      <input autoFocus className=\"input\" id=\"username\" placeholder=\"Username\" type=\"text\" value={username} onChange={handleUsernameChange} />\r\n                      <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-user\" />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"field\">\r\n                    <label className=\"label has-text-left\" htmlFor=\"password\">Password</label>\r\n                    <div className=\"control has-icons-left\">\r\n                      <input className={passwordClassName} id=\"password\" placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                      <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-lock\" />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <button id=\"LoginButton\" className={loginbutton} >Login</button>\r\n                </form>\r\n              </div>\r\n              <p className=\"has-text-grey\">\r\n                <a href=\"/\" >Sign Up</a> &nbsp;·&nbsp;\r\n                <a href=\"/\">Forgot Password</a> &nbsp;·&nbsp;\r\n                <a href=\"/\">Need Help?</a>\r\n              </p>\r\n            </div>\r\n            <div className=\"column\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import React, { } from 'react'; //useEffect useState\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Makes the header and returns it.\r\n *\r\n * @author Robert Boudewijn\r\n * @date 2021/01/20\r\n * @param {*} props\r\n * @return {JSX} JSX\r\n */\r\nfunction Header(props) {\r\n  /**\r\n   *  This function logges the current user out.\r\n   *  @author Robert Boudewijn\r\n   *  @date 2020-01-17\r\n   *  @async\r\n   */\r\n  async function logOut() {\r\n    let request = await fetch(props.IP + \"session.php\",\r\n      {\r\n        method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\r\n        // mode: 'cors',\r\n        // cache: 'no-cache',\r\n        // credentials: 'same-origin',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer'\r\n      }\r\n    );\r\n    if (request.status === 200) {\r\n      props.setCurrentScreen(\"login\");\r\n    } else {\r\n      alert(\"Something went wrong. Try again later.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar has-background-light\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"navbar-brand\">\r\n        <a className=\"navbar-item\" href=\"https://bulma.io\">\r\n          <img src=\"images/logo.png\" width={112} height={28} alt=\"logo\" />\r\n        </a>\r\n        {/*https://bulma.io/images/bulma-logo.png */}\r\n        <button className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\r\n          <span aria-hidden=\"true\" />\r\n          <span aria-hidden=\"true\" />\r\n          <span aria-hidden=\"true\" />\r\n        </button>\r\n      </div>\r\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\r\n        <div className=\"navbar-start\">\r\n          <Link className=\"navbar-item\" to=\"/\">\r\n            Home\r\n          </Link>\r\n          <a className=\"navbar-item\" href=\"https://webmail.foxels.nl/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Email\r\n          </a>\r\n          <div className=\"navbar-item has-dropdown is-hoverable\">\r\n            <a href=\"/\" className=\"navbar-link\">\r\n              More\r\n            </a>\r\n            <div className=\"navbar-dropdown\">\r\n              <a href=\"/\" className=\"navbar-item\">\r\n                About\r\n              </a>\r\n              <a href=\"/\" className=\"navbar-item\">\r\n                Jobs\r\n              </a>\r\n              <a href=\"/\" className=\"navbar-item\">\r\n                Contact\r\n              </a>\r\n              <hr className=\"navbar-divider\" />\r\n              <a href=\"Mailto:robert@robertboudewijn.nl?subject=FoxManage_Issue\" className=\"navbar-item\">\r\n                Report an issue\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar-end\">\r\n          <div className=\"navbar-item\">\r\n            <div className=\"buttons\">\r\n              <button className=\"button is-primary\" onClick={() => logOut()}>\r\n                <strong>Logout</strong>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Header;","import { SET_USEDDATA, SET_DOMAINS, SET_DATABASES, SET_MAILBOXES, SET_FACTUREN } from \"./actionTypes\";\r\nimport {IP} from \"../GLOBALVAR\";\r\n\r\n//USED DATA\r\nexport const setUsedData = usedData => ({ type: SET_USEDDATA, payload: { usedData } });\r\nexport function getUsedData(){ \r\n    return async (dispatch, getState) => {\r\n        let request = await fetch(IP + \"users/data.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        let response = await request.json();\r\n        response.status = request.status\r\n        dispatch(({ type: SET_USEDDATA, payload: { response } }));\r\n        return response\r\n        \r\n        //todo: ERROR HANDL\r\n    }\r\n};\r\n\r\n//DOMAINS\r\nexport const setDomains = domains => ({ type: SET_DOMAINS, payload: { domains } });\r\nexport function getDomains(){ \r\n    return async (dispatch, getState) => {\r\n        let request = await fetch(IP + \"users/domains.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        let response = await request.json();\r\n        response.status = request.status\r\n        dispatch(({ type: SET_DOMAINS, payload: { response } }));\r\n        return response\r\n        \r\n        //todo: ERROR HANDL\r\n    }\r\n};\r\n\r\n//DATABASES\r\nexport const setDatabses = databases => ({ type: SET_DATABASES, payload: { databases } });\r\nexport function getDatabases(){ \r\n    return async (dispatch, getState) => {\r\n        let request = await fetch(IP + \"users/databases.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        let response = await request.json();\r\n        response.status = request.status\r\n        dispatch(({ type: SET_DATABASES, payload: { response } }));\r\n        return response\r\n        \r\n        //todo: ERROR HANDL\r\n    }\r\n};\r\n\r\n//MAILBOXES\r\n\r\nexport const setMailboxes = mailboxes => ({ type: SET_MAILBOXES, payload: { mailboxes } });\r\nexport function getMailboxes(){ \r\n    return async (dispatch, getState) => {\r\n        //todo\r\n        let request = await fetch(IP + \"getUsedData.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        let response = await request.json();\r\n        response.status = request.status\r\n        dispatch(({ type: SET_MAILBOXES, payload: { response } }));\r\n        return response\r\n        \r\n        //todo: ERROR HANDL\r\n    }\r\n};\r\n\r\n//Facturen\r\n\r\nexport const setFacturen = facturen => ({ type: SET_FACTUREN, payload: { facturen } });\r\nexport function getFacturen(){ \r\n    return async (dispatch, getState) => {\r\n        let request = await fetch(IP + \"users/facturen.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        let response = await request.json();\r\n        response.status = request.status\r\n        dispatch(({ type: SET_FACTUREN, payload: { response } }));\r\n        return response\r\n        \r\n        //todo: ERROR HANDL\r\n    }\r\n};","import React, { useState, useEffect } from 'react'; // \r\nimport { connect } from \"react-redux\";\r\nimport { setUsedData, getUsedData } from \"../../redux/actions\";\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * Returns the aside for all pages.\r\n *\r\n * @author Robert Boudewijn\r\n * @date 2021/01/20\r\n * @param {*} props\r\n * @return {JSX} jsx\r\n */\r\nfunction Aside(props) {\r\n    const [usedDataText, setUsedDataText] = useState(\"Loading...\");\r\n    const [usedDataSliderValue, setUsedDataSliderValue] = useState(\"\");\r\n    const [usedDataSliderMax, setUsedDataSliderMax] = useState(100);\r\n    const [usedDataSliderClass, setUsedDataSliderClass] = useState(\"progress is-primary\");\r\n\r\n    useEffect(() => {\r\n        /**\r\n         *  This functions handles the used data of the user.\r\n         *  @author Robert Boudewijn\r\n         *  @date 2020-01-17\r\n         *  @async\r\n         */\r\n        async function handleUsedData() {\r\n            if (props.usedData !== \"no Data\") {\r\n                if (props.usedData.status === 200) {\r\n                    setUsedDataText(props.usedData.usedDirSize + \" / \" + props.usedData.maxDirSize + \" MB\");\r\n                    setUsedDataSliderMax(props.usedData.maxDirSize);\r\n                    setUsedDataSliderValue(props.usedData.usedDirSize);\r\n\r\n                    let percentage = props.usedData.usedDirSize / props.usedData.maxDirSize * 100;\r\n                    if (percentage > 90) {\r\n                        setUsedDataSliderClass(\"progress is-danger\");\r\n\r\n                    } else if (percentage > 75) {\r\n                        setUsedDataSliderClass(\"progress is-warning\");\r\n                    }\r\n\r\n                } else if (props.usedData.status === 401) {\r\n                    //nothing user is not logged on so...\r\n                } else {\r\n                    setUsedDataSliderValue(100);\r\n                    setUsedDataSliderClass(\"progress\");\r\n                    setUsedDataText(\"Request error.\");\r\n                }\r\n            }\r\n        }\r\n        handleUsedData();\r\n    }, [props.usedData]);\r\n\r\n    /**\r\n     * This function makes sure to start fetching the used data.\r\n     *\r\n     * @author Robert Boudewijn\r\n     * @date 2021/02/04\r\n     * @param {}\r\n     * @return {} \r\n     */\r\n    useEffect(() => {\r\n        props.getUsedData()\r\n        // eslint-disable-next-line\r\n    }, [props.IP])\r\n\r\n    /**\r\n     *  Returns the correct progress component\r\n     *\r\n     * @author Robert Boudewijn\r\n     * @date 2021/01/19\r\n     * @return {JSX} jsx\r\n     */\r\n    function dataSlider() {\r\n        if (usedDataSliderValue !== \"\") {\r\n            return <progress id=\"usedDataSlider\" className={usedDataSliderClass} max={usedDataSliderMax} value={usedDataSliderValue} />\r\n        } else {\r\n            return <progress id=\"usedDataSlider\" className={usedDataSliderClass} max={usedDataSliderMax} />\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <aside className=\"menu\">\r\n            <p className=\"menu-label\">\r\n                General\r\n            </p>\r\n            <ul className=\"menu-list\">\r\n                <li><Link to=\"/\">Dashboard</Link></li>\r\n                <li><Link to=\"/Facturen\">Facturen</Link></li>\r\n                <li><Link to=\"/Domains\">Domains</Link></li>\r\n                <li><Link to=\"/Databases\">Databases</Link></li>\r\n                <li><Link to=\"/Mailboxes\">MailBoxes</Link></li>\r\n            </ul>\r\n            <p className=\"menu-label\">\r\n                Data usage:\r\n            </p>\r\n            {dataSlider()}\r\n            <p id=\"usedDataText\">{usedDataText}</p>\r\n        </aside>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { usedData: state.usedData };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setUsedData, getUsedData }\r\n)(Aside);\r\n","import React from 'react';\r\n\r\n/**\r\n * Build the footer\r\n *\r\n * @author Robert Boudewijn\r\n * @date 2021/01/20\r\n * @param {*} props\r\n * @return {JSX} JSX \r\n */\r\nfunction Footer(props) {\r\n\r\n  return (\r\n    <footer className=\"footer has-background-light\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>\r\n          <strong>FoxManage</strong> by <a href=\"https://robertboudewijn.nl\">Robert Boudewijn</a>. The source code is licensed\r\n      <a href=\"https://opensource.org/licenses/BSD-2-Clause\">BSD</a>. The website content\r\n      is licensed <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY NC SA 4.0</a>.<br />\r\n      Copyright 2021 Robert Boudewijn\r\n    </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getDomains, getDatabases } from \"../../redux/actions\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nfunction Dashboard(props) {\r\n    const [chart, setChart] = useState(<></>);\r\n    const [domains , setDomains] = useState(\"\");\r\n    const [databases, setDatabases] = useState(\"\");\r\n\r\n    //Set chart\r\n    useEffect(() => {\r\n        if (props.usedData !== \"\") {\r\n            setChart(<Chart\r\n                width={400}\r\n                height={300}\r\n                chartType=\"PieChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    [\"Type\", \"Amount\"],\r\n                    [\"Database\", props.usedData.usedDirSize - props.usedData.folderUsedDirSize],\r\n                    [\"Storage\", props.usedData.folderUsedDirSize],\r\n                    [\"Free\", props.usedData.maxDirSize - props.usedData.usedDirSize]\r\n                ]}\r\n                options={{\r\n                    title: 'Storage',\r\n                    sliceVisibilityThreshold: .00000001, //this makes sure that all slices are visible\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />)\r\n        }\r\n    },[props.usedData])\r\n\r\n    //set domains\r\n    useEffect(() => {\r\n        if (props.domains === \"no Data\") {\r\n            props.getDomains()\r\n        }else{\r\n        setDomains(props.domains)\r\n        }// eslint-disable-next-line\r\n    }, [props.domains])\r\n\r\n    //set databases\r\n    useEffect(() => {\r\n        if (props.databases === \"no Data\") {\r\n            props.getDatabases()\r\n        }else{\r\n        setDatabases(props.databases)\r\n        }// eslint-disable-next-line\r\n    }, [props.databases])\r\n\r\n\r\n\r\n    /**\r\n     * Makes from an array a set of li's \r\n     *\r\n     * @author Robert Boudewijn\r\n     * @date 2021/02/04\r\n     * @param {*} liArray\r\n     * @return {*} jsx \r\n     */\r\n    function returnLi(liArray){\r\n        if(typeof liArray === \"object\"){\r\n            return liArray.map(Element => <li key={Element}>{Element}</li>)\r\n        }else{\r\n            return <li>Geen gevonden</li>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Dashboard</h1>\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <h2 className=\"subtitle\">Domains:</h2>\r\n                    <div className=\"content\">\r\n                        <ul id=\"domains\">\r\n                        {returnLi(domains)}\r\n                        </ul>\r\n                    </div>\r\n                    <h2 className=\"subtitle\">Databases:</h2>\r\n                    <div className=\"content\">\r\n                        <ul id=\"databases\">\r\n                            {returnLi(databases)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column is-5-desktop \">\r\n                    {chart}\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        usedData: state.usedData,\r\n        domains: state.domains,\r\n        databases: state.databases\r\n    };\r\n  };\r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    { \r\n        getDomains,\r\n        getDatabases\r\n     }\r\n  )(Dashboard);\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getFacturen } from \"../../redux/actions\";\r\n\r\nfunction Facturen(props) {\r\n    const [facturen, setFacturen] = useState(\"\");\r\n    const [currentfactuur, setCurrentfactuur] = useState(1);\r\n    const [modalActive, setModalActive] = useState(false);\r\n\r\n\r\n    //get data\r\n    useEffect(() => {\r\n        if (props.facturen === \"no Data\") {\r\n            props.getFacturen()\r\n        } else {\r\n            setFacturen(props.facturen)\r\n        }// eslint-disable-next-line\r\n    }, [props.facturen])\r\n\r\n\r\n    /**\r\n     * This function opens a new window with the supplied element and opens the print window\r\n     *\r\n     * @author Robert Boudewijn, dotancohen, Bill Paetzke\r\n     * @date 2021/02/05\r\n     * @param {*} elem\r\n     * @param {*} title\r\n     * @return {*} \r\n     */\r\n    function PrintElem(elem, title) {\r\n        var mywindow = window.open('', 'PRINT', 'height=600,width=800');\r\n\r\n        mywindow.document.write('<html><head><title>' + document.title + '</title> <link rel=\"stylesheet\" href=\"css/bulma.css\"> <link rel=\"stylesheet\" href=\"css/ccss.css\"><script src=\"https://kit.fontawesome.com/ae33e372bf.js\" crossorigin=\"anonymous\"></script>');\r\n        mywindow.document.write('</head><body >');\r\n        mywindow.document.write('<section><div class=\"container CS-has-padding-left-3 CS-has-padding-right-3 CS-has-padding-top-3 \"> <h1 class=\"title is-4\">' + title + '</h1>');\r\n        mywindow.document.write(document.getElementById(elem).innerHTML);\r\n        mywindow.document.write('</div></section></body></html>');\r\n\r\n        mywindow.document.close(); // necessary for IE >= 10\r\n        mywindow.focus(); // necessary for IE >= 10*/\r\n\r\n        mywindow.print();\r\n        // mywindow.close();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Genarates from a timpstamp a day-month-year, With the option to increase the month \r\n     *\r\n     * @author Robert Boudewijn\r\n     * @date 2021/02/05\r\n     * @param {String} timestamp\r\n     * @param {number} [monthIncrease=0]\r\n     * @return {String} \r\n     */\r\n    function getDate(timestamp, monthIncrease = 0) {\r\n        if (facturen === \"\") {\r\n            return <></>\r\n        }\r\n        // Split timestamp into [ Y, M, D, h, m, s ]\r\n        let t = timestamp.split(/[- :]/);\r\n\r\n        // Apply each element to the Date function\r\n        let d = new Date(Date.UTC(t[0], t[1] - 1 + monthIncrease, t[2], t[3], t[4], t[5]));\r\n        let month = d.getMonth()+1\r\n\r\n        return d.getDay() + \"-\" + month + \"-\" + d.getFullYear();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Function that builds the table\r\n     *\r\n     * @author Robert Boudewijn\r\n     * @date 2021/02/04\r\n     * @return {*} \r\n     */\r\n    function table() {\r\n        if (facturen === \"\") {\r\n            return <h4 className=\"subtitle\">Laden...</h4>\r\n        }\r\n        function genTr() {\r\n            let trs = facturen.map(element => {\r\n                return (\r\n                    <tr\r\n                        key={element.date}\r\n                        className={(currentfactuur === element) ? \"is-selected is-clickable\" : \"is-clickable\"}\r\n                        onClick={() => {\r\n                            setCurrentfactuur(element)\r\n                            setModalActive(true)\r\n                        }}\r\n                    >\r\n                        <td>{element.id}</td>\r\n                        <td>{getDate(element.date)}</td>\r\n                        <td>{(element.payed === 1) ? \"Ja\" : \"Nee\"}</td>\r\n                    </tr>)\r\n            })\r\n            return trs\r\n        }\r\n        return (<table className=\"table is-fullwidth is-striped is-hoverable\">\r\n            <thead>\r\n                <tr>\r\n                    <th><abbr title=\"Factuurnummer\">Nr</abbr></th>\r\n                    <th><abbr title=\"date\">Datum</abbr></th>\r\n                    <th><abbr title=\"payed\">Betaald</abbr></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {genTr()}\r\n            </tbody>\r\n        </table>)\r\n    }\r\n\r\n    /**\r\n     * Functiopn that builds the modal-\r\n     *\r\n     * @author Robert Boudewijn\r\n     * @date 2021/02/05\r\n     * @return {*} \r\n     */\r\n    function modal() {\r\n        if (facturen === \"\" || currentfactuur === 1) {\r\n            return <></>\r\n        }\r\n        let totalPrice = 0;\r\n        function genFactuurTr() {\r\n\r\n            let trs = currentfactuur.products.map(element => {\r\n                totalPrice += (element.price * element.amount); \r\n                return (\r\n                    <tr\r\n                        key={element.productname}\r\n                    >\r\n                        <td>{element.amount}</td>\r\n                        <td>{element.productname}</td>\r\n                        <td>&euro;{element.price.replace('.', ',')}</td>\r\n                        <td>&euro;{(element.price * element.amount).toFixed(2).replace('.', ',')}</td>\r\n                    </tr>)\r\n            })\r\n            return trs\r\n        }\r\n\r\n        function genTotal() {\r\n            return [\r\n                <tr key=\"subtotaal\">\r\n                    <th></th>\r\n                    <th>Subtotaal</th>\r\n                    <th></th>\r\n                    <th>&euro;{totalPrice.toFixed(2).replace('.', ',')}</th>\r\n                </tr>,\r\n                <tr key=\"btw\">\r\n                    <th></th>\r\n                    <th>BTW</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                </tr>,\r\n                <tr key=\"totaal\">\r\n                    <th></th>\r\n                    <th><b>Totaal te betalen voor: {getDate(currentfactuur.date, 1)} </b></th>\r\n                    <th></th>\r\n                    <th>&euro;{totalPrice.toFixed(2).replace('.', ',')}</th>\r\n                </tr>,\r\n            ]\r\n        }\r\n\r\n        return (\r\n            <div className={(modalActive) ? \"modal is-active\" : \"modal\"}>\r\n                <div className=\"modal-background\"></div>\r\n                <div className=\"modal-card\">\r\n                    <header className=\"modal-card-head\">\r\n                        <p className=\"modal-card-title\">Factuur {currentfactuur.id}</p>\r\n                        <button className=\"delete\" aria-label=\"close\" onClick={() => { setModalActive(false); setCurrentfactuur(1) }}></button>\r\n                    </header>\r\n                    <section className=\"modal-card-body\" id=\"factuurbody\">\r\n                        <div className=\"content\">\r\n                            <div className=\"columns\">\r\n                                <p className=\"column\">Dhr. of mw. {currentfactuur.userinfo.firstName} {currentfactuur.userinfo.lastName} <br />\r\n                                    {currentfactuur.userinfo.adress} {currentfactuur.userinfo.number}<br />\r\n                                    {currentfactuur.userinfo.zipcode} {currentfactuur.userinfo.city}<br />\r\n                                    {currentfactuur.userinfo.country}\r\n                                </p>\r\n                                <div className=\"column\" />\r\n                                <div className=\"column\">\r\n                                    <p>Robert Boudewijn <br />Robert@robertboudewijn.nl<br />Paasberg 32</p>\r\n\r\n                                    <p>{getDate(currentfactuur.date)}</p>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <hr />\r\n                            <table className=\"table is-fullwidth is-striped is-hoverable\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Aantal</th>\r\n                                        <th>Beschrijving</th>\r\n                                        <th>Prijs per eenheid</th>\r\n                                        <th>Toaal</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {genFactuurTr()}\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    {genTotal()}\r\n                                </tfoot>\r\n                            </table>\r\n                            <p>Bedankt voor uw bestelling.</p>\r\n                            <hr />\r\n                            <p>We verzoeken u vriendelijk het bovenstaande bedrag van &euro;{totalPrice.toFixed(2).replace('.', ',')} voor {getDate(currentfactuur.date, 1)} te voldoen op onze\r\nbankrekening NL59 INGB 0752 8624 21 ten name van Robert Boudewijn onder vermelding van “Factuurnr: {currentfactuur.id}”. Voor vragen kunt u contact opnemen per e-mail.</p>\r\n                        </div>\r\n                    </section>\r\n                    <footer className=\"modal-card-foot\">\r\n                        <button className=\"button is-success\" onClick={() => PrintElem(\"factuurbody\", \"Factuur nr: \" + currentfactuur.id)}>Download</button>\r\n                    </footer>\r\n                </div>\r\n            </div>)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Facturen</h1>\r\n            {modal()}\r\n            {table()}\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        facturen: state.facturen\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getFacturen\r\n    }\r\n)(Facturen);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getDatabases } from \"../../redux/actions\";\r\n\r\nfunction Databases(props) {\r\n    const [databases, setDatabases] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.databases === \"no Data\") {\r\n            props.getDatabases()\r\n        }else{\r\n        setDatabases(props.databases)\r\n        }// eslint-disable-next-line\r\n    }, [props.databases])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Databases</h1>\r\n            {databases}\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        databases: state.databases\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getDatabases\r\n    }\r\n)(Databases);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Domains(props) {\r\n    const [domains , setDomains] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    /**\r\n     *  This function gets all domains of the current user.\r\n     *  @author Robert Boudewijn\r\n     *  @date 2020-01-18\r\n     *  @async\r\n     *  @params None\r\n     *  @return None\r\n     */\r\n    async function getDomains() {\r\n        let request = await fetch(props.IP + \"users/domains.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        if (request.status === 200) {\r\n            let response = await request.json();\r\n\r\n            setDomains(response);\r\n\r\n\r\n        } else if (request.status === 401) {\r\n            //nothing user is not logged on so...\r\n        } else {\r\n            //error\r\n        }\r\n    }\r\n\r\n\r\n        getDomains();\r\n    }, [props.IP])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Domains</h1>\r\n            {domains}\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Domains;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Mailboxes(props) {\r\n    const [databases, setDatabases] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    /**\r\n     *  This function gets all domains of the current user.\r\n     *  @author Robert Boudewijn\r\n     *  @date 2020-01-18\r\n     *  @async\r\n     *  @params None\r\n     *  @return None\r\n     */\r\n    async function getDatabases() {\r\n        let request = await fetch(props.IP + \"users/databases.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        if (request.status === 200) {\r\n            let response = await request.json();\r\n\r\n            setDatabases(response);\r\n        } else if (request.status === 401) {\r\n            //nothing user is not logged on so...\r\n        } else {\r\n            //error\r\n        }\r\n    }\r\n        getDatabases();\r\n    }, [props.IP])\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Databases</h1>\r\n            {databases}\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Mailboxes;","import React from 'react'; //useEffect \r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from './includes/Header';\r\nimport Aside from './includes/Aside';\r\nimport Footer from './includes/Footer';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Facturen from './pages/Facturen';\r\nimport Databases from './pages/Databases';\r\nimport Domains from './pages/Domains';\r\nimport Mailboxes from './pages/Mailboxes';\r\n\r\n\r\n/**\r\n * Main page function for the appplication. Routing is done here.\r\n *\r\n * @author Robert Boudewijn\r\n * @date 2021/01/20\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nfunction Index(props) {\r\n  return (\r\n    <Router>\r\n      <Header IP={props.IP} setCurrentScreen={props.setCurrentScreen} ></Header>\r\n      <section>\r\n        <div className=\"columns\">\r\n          <div className=\"column is-2 has-background-light CS-has-padding-left-2 CS-has-padding-top-2 CS-has-padding-bottom-2\">\r\n            <Aside IP={props.IP}></Aside>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div className=\"container CS-has-padding-left-1\">\r\n              <Switch>\r\n                <Route path=\"/Facturen\">\r\n                  <Facturen />\r\n                </Route>\r\n                <Route path=\"/Domains\">\r\n                  <Domains\r\n                    IP={props.IP}\r\n                  />\r\n                </Route>\r\n                <Route path=\"/Databases\">\r\n                  <Databases\r\n                    IP={props.IP}\r\n                  />\r\n                </Route>\r\n                <Route path=\"/Mailboxes\">\r\n                  <Mailboxes\r\n                    IP={props.IP}\r\n                  />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Dashboard\r\n                    IP={props.IP}\r\n                  />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Footer></Footer>\r\n    </Router>\r\n  );\r\n}\r\nexport default Index;","import React from 'react';\r\nimport {IP} from \"./GLOBALVAR\";\r\nimport Login from './components/Login';\r\nimport Index from './components/Index';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      IP: IP,\r\n      currentScreen: \"login\",\r\n    }\r\n    this.setCurrentScreen = this.setCurrentScreen.bind(this);\r\n  }\r\n\r\n  setCurrentScreen(A){\r\n    this.setState({currentScreen: A})\r\n  }\r\n\r\n\r\n  render() {\r\n    switch (this.state.currentScreen) {\r\n      case \"login\":\r\n        return (\r\n          <Login \r\n            IP={this.state.IP}\r\n            setCurrentScreen={this.setCurrentScreen}>\r\n\r\n          </Login>\r\n        );\r\n        \r\n      case \"index\":\r\n        return(\r\n        <Index\r\n          IP={this.state.IP}\r\n          setCurrentScreen={this.setCurrentScreen}\r\n        ></Index>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}