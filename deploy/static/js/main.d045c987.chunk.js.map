{"version":3,"sources":["components/Login.jsx","components/includes/Header.jsx","components/includes/Aside.jsx","components/includes/Footer.jsx","components/pages/Dashboard.jsx","components/pages/Databases.jsx","components/pages/Domains.jsx","components/pages/Mailboxes.jsx","components/Index.jsx","App.js","index.js"],"names":["Login","props","useState","username","setUsername","password","setPassword","loginbutton","setloginbutton","infoBox","setInfoBox","infoBoxClassName","setInfoBoxClassName","passwordClassName","setPasswordClassName","e","a","preventDefault","length","fetch","IP","method","mode","headers","body","request","console","log","status","setCurrentScreen","useEffect","redirect","referrerPolicy","getLoggedInState","className","onSubmit","htmlFor","autoFocus","id","placeholder","type","value","onChange","target","href","Header","alert","role","aria-label","src","width","height","alt","aria-expanded","data-target","aria-hidden","to","rel","onClick","logOut","Aside","usedDataText","setUsedDataText","usedDataSliderValue","setUsedDataSliderValue","usedDataSliderMax","setUsedDataSliderMax","usedDataSliderClass","setUsedDataSliderClass","json","response","usedDirSize","maxDirSize","percentage","getUsedData","max","Footer","Dashboard","usedData","setUsedData","chart","setChart","domains","setDomains","databases","setDatabases","returnLi","liArray","map","Element","getDomains","getDatabases","chartType","loader","data","folderUsedDirSize","options","title","sliceVisibilityThreshold","rootProps","Databases","Domains","Mailboxes","Index","path","App","state","currentScreen","bind","A","this","setState","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d045c987.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n/**\r\n * This function handles the login page. \r\n *\r\n * @author Robert Boudewijn\r\n * @date 2021/01/20\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nfunction Login(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginbutton, setloginbutton] = useState(\"button is-block is-primary is-fullwidth\");\r\n  const [infoBox, setInfoBox] = useState(\"Please enter your email and password.\");\r\n  const [infoBoxClassName, setInfoBoxClassName] = useState(\"title has-text-grey is-5\");\r\n  const [passwordClassName, setPasswordClassName] = useState(\"input\");\r\n\r\n  useEffect(() => {\r\n    /**\r\n       *  Checks if the user is allready logged on.\r\n       *  @author Robert Boudewijn\r\n       *  @date 2020-01-19\r\n       *  @async\r\n       *  @params None\r\n       *  @return None\r\n       */\r\n    async function getLoggedInState() {\r\n      let request = await fetch(props.IP + \"CheckIfLoggedin.php\",\r\n        {\r\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n          // mode: 'cors',\r\n          // cache: 'no-cache',\r\n          // credentials: 'same-origin',\r\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n          redirect: 'follow',\r\n          referrerPolicy: 'no-referrer'\r\n        }\r\n      );\r\n      if (request.status === 200) {\r\n        props.setCurrentScreen(\"index\");\r\n      } else if (request.status === 401) {\r\n        //nothing user is not logged on so...\r\n      }\r\n    }\r\n    getLoggedInState();\r\n  }, [props]);\r\n\r\n\r\n\r\n  /**\r\n   * Handle username change. \r\n   *\r\n   * @author Robert Boudewijn\r\n   * @date 2021/01/20\r\n   * @param {*} e\r\n   */\r\n  function handleUsernameChange(e) {\r\n    setUsername(e.target.value);\r\n  }\r\n  /**\r\n   * Handle password change.\r\n   *\r\n   * @author Robert Boudewijn\r\n   * @date 2021/01/20\r\n   * @param {*} e\r\n   */\r\n  function handlePasswordChange(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  /**\r\n   *This function handles a submit of the form. And makes a fetch request to the server to authenticate.\r\n   *\r\n   * @author Robert Boudewijn\r\n   * @date 2021/01/20\r\n   * @param {*} e\r\n   */\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (password.length >= 8) {\r\n      setloginbutton(\"button is-block is-primary is-fullwidth is-loading\");\r\n      try {\r\n        let request = await fetch(props.IP + \"login.php\", {\r\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n          mode: 'cors',\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n          body: \"username=\" + username + \"&password=\" + password,\r\n        }\r\n        );\r\n        console.log(request)\r\n        if (request.status === 200) {\r\n          setloginbutton(\"button is-block is-success is-fullwidth\");\r\n          props.setCurrentScreen(\"index\");\r\n        } else if (request.status === 500) {\r\n          setInfoBox(\"There was an error.\");\r\n          setloginbutton(\"button is-block is-primary is-fullwidth\");\r\n        } else {\r\n          setInfoBox(\"Account not found or incorrect password.\");\r\n          setInfoBoxClassName(\"title has-text-danger is-5\");\r\n          setloginbutton(\"button is-block is-danger is-fullwidth\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n        setInfoBox(\"There was an error.\");\r\n        setloginbutton(\"button is-block is-primary is-fullwidth\");\r\n      }\r\n    } else {\r\n      setInfoBox(\"Password must be longer than 7 characters.\");\r\n      setInfoBoxClassName(\"title has-text-danger is-5\");\r\n      setPasswordClassName(\"input is-danger\");\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"hero is-primary is-fullheight\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <div className=\"columns\">\r\n            <div className=\"column\" />\r\n            <div className=\"column is-4 has-text-centered\">\r\n              <h3 className=\"title has-text-white\">Login</h3>\r\n              <hr className=\"login-hr\" />\r\n              <p className=\"subtitle has-text-white\">Login to your manager</p>\r\n              <div className=\"box\">\r\n                <div className={infoBoxClassName}>{infoBox}</div>\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"field\">\r\n                    <label className=\"label has-text-left\" htmlFor=\"username\">Username</label>\r\n                    <div className=\"control has-icons-left\">\r\n                      <input autoFocus className=\"input\" id=\"username\" placeholder=\"Username\" type=\"text\" value={username} onChange={handleUsernameChange} />\r\n                      <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-user\" />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"field\">\r\n                    <label className=\"label has-text-left\" htmlFor=\"password\">Password</label>\r\n                    <div className=\"control has-icons-left\">\r\n                      <input className={passwordClassName} id=\"password\" placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                      <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-lock\" />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <button id=\"LoginButton\" className={loginbutton} >Login</button>\r\n                </form>\r\n              </div>\r\n              <p className=\"has-text-grey\">\r\n                <a href=\"/\" >Sign Up</a> &nbsp;·&nbsp;\r\n                <a href=\"/\">Forgot Password</a> &nbsp;·&nbsp;\r\n                <a href=\"/\">Need Help?</a>\r\n              </p>\r\n            </div>\r\n            <div className=\"column\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import React, { } from 'react'; //useEffect useState\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Makes the header and returns it.\r\n *\r\n * @author Robert Boudewijn\r\n * @date 2021/01/20\r\n * @param {*} props\r\n * @return {JSX} JSX\r\n */\r\nfunction Header(props) {\r\n  /**\r\n   *  This function logges the current user out.\r\n   *  @author Robert Boudewijn\r\n   *  @date 2020-01-17\r\n   *  @async\r\n   */\r\n  async function logOut() {\r\n    let request = await fetch(props.IP + \"logout.php\",\r\n      {\r\n        method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n        // mode: 'cors',\r\n        // cache: 'no-cache',\r\n        // credentials: 'same-origin',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer'\r\n      }\r\n    );\r\n    if (request.status === 200) {\r\n      props.setCurrentScreen(\"login\");\r\n    } else {\r\n      alert(\"Something went wrong. Try again later.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar has-background-light\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"navbar-brand\">\r\n        <a className=\"navbar-item\" href=\"https://bulma.io\">\r\n          <img src=\"images/logo.png\" width={112} height={28} alt=\"logo\" />\r\n        </a>\r\n        {/*https://bulma.io/images/bulma-logo.png */}\r\n        <button className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\r\n          <span aria-hidden=\"true\" />\r\n          <span aria-hidden=\"true\" />\r\n          <span aria-hidden=\"true\" />\r\n        </button>\r\n      </div>\r\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\r\n        <div className=\"navbar-start\">\r\n          <Link className=\"navbar-item\" to=\"/\">\r\n            Home\r\n          </Link>\r\n          <a className=\"navbar-item\" href=\"https://mail.axc.nl/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Email\r\n          </a>\r\n          <div className=\"navbar-item has-dropdown is-hoverable\">\r\n            <a href=\"/\" className=\"navbar-link\">\r\n              More\r\n            </a>\r\n            <div className=\"navbar-dropdown\">\r\n              <a href=\"/\" className=\"navbar-item\">\r\n                About\r\n              </a>\r\n              <a href=\"/\" className=\"navbar-item\">\r\n                Jobs\r\n              </a>\r\n              <a href=\"/\" className=\"navbar-item\">\r\n                Contact\r\n              </a>\r\n              <hr className=\"navbar-divider\" />\r\n              <a href=\"/\" className=\"navbar-item\">\r\n                Report an issue\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar-end\">\r\n          <div className=\"navbar-item\">\r\n            <div className=\"buttons\">\r\n              <button className=\"button is-primary\" onClick={() => logOut()}>\r\n                <strong>Logout</strong>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Header;","import React, { useState, useEffect } from 'react'; // \r\n// eslint-disable-next-line\r\nimport { BrowserRouter as  Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Returns the aside for all pages.\r\n *\r\n * @author Robert Boudewijn\r\n * @date 2021/01/20\r\n * @param {*} props\r\n * @return {JSX} jsx\r\n */\r\nfunction Aside(props) {\r\n    const [usedDataText, setUsedDataText] = useState(\"Loading...\");\r\n    const [usedDataSliderValue, setUsedDataSliderValue] = useState(\"\");\r\n    const [usedDataSliderMax, setUsedDataSliderMax] = useState(100);\r\n    const [usedDataSliderClass, setUsedDataSliderClass] = useState(\"progress is-primary\");\r\n\r\n\r\n    useEffect(()=>{\r\n    /**\r\n     *  This functions gets the used data of the user.\r\n     *  @author Robert Boudewijn\r\n     *  @date 2020-01-17\r\n     *  @async\r\n     */\r\n    async function getUsedData() {\r\n        let request = await fetch(props.IP + \"getUsedData.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        if (request.status === 200) {\r\n            let response = await request.json();\r\n            setUsedDataText(response.usedDirSize + \" / \" + response.maxDirSize + \" MB\");\r\n            setUsedDataSliderMax(response.maxDirSize);\r\n            setUsedDataSliderValue(response.usedDirSize);\r\n\r\n            let percentage = response.usedDirSize / response.maxDirSize * 100;\r\n            if (percentage > 90) {\r\n                setUsedDataSliderClass(\"progress is-danger\");\r\n\r\n            } else if (percentage > 75) {\r\n                setUsedDataSliderClass(\"progress is-warning\");\r\n            }\r\n\r\n        } else if (request.status === 401) {\r\n            //nothing user is not logged on so...\r\n        } else {\r\n            setUsedDataSliderValue(100);\r\n            setUsedDataSliderClass(\"progress\");\r\n            setUsedDataText(\"Request error.\");\r\n        }\r\n    }\r\n        getUsedData();\r\n    },[props.IP]);\r\n\r\n\r\n    \r\n\r\n    /**\r\n     *  Returns the correct progress component\r\n     *\r\n     * @author Robert Boudewijn\r\n     * @date 2021/01/19\r\n     * @return {JSX} jsx\r\n     */\r\n    function dataSlider() {\r\n        if (usedDataSliderValue !== \"\") {\r\n            return <progress id=\"usedDataSlider\" className={usedDataSliderClass} max={usedDataSliderMax} value={usedDataSliderValue} />\r\n        } else {\r\n            return <progress id=\"usedDataSlider\" className={usedDataSliderClass} max={usedDataSliderMax} />\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <aside className=\"menu\">\r\n            <p className=\"menu-label\">\r\n                General\r\n            </p>\r\n            <ul className=\"menu-list\">\r\n                <li><Link to=\"/\">Dashboard</Link></li>\r\n                <li><Link to=\"/Domains\">Domains</Link></li>\r\n                <li><Link to=\"/Databases\">Databases</Link></li>\r\n                <li><Link to=\"/Mailboxes\">MailBoxes</Link></li>\r\n            </ul>\r\n            <p className=\"menu-label\">\r\n                Data usage:\r\n            </p>\r\n            {dataSlider()}\r\n            <p id=\"usedDataText\">{usedDataText}</p>\r\n        </aside>\r\n\r\n    );\r\n}\r\nexport default Aside;","import React from 'react';\r\n\r\n/**\r\n * Build the footer\r\n *\r\n * @author Robert Boudewijn\r\n * @date 2021/01/20\r\n * @param {*} props\r\n * @return {JSX} JSX \r\n */\r\nfunction Footer(props) {\r\n\r\n  return (\r\n    <footer className=\"footer has-background-light\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>\r\n          <strong>FoxManage</strong> by <a href=\"https://robertboudewijn.nl\">Robert Boudewijn</a>. The source code is licensed\r\n      <a href=\"https://opensource.org/licenses/BSD-2-Clause\">BSD</a>. The website content\r\n      is licensed <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY NC SA 4.0</a>.<br />\r\n      Copyright 2021 Robert Boudewijn\r\n    </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport Chart from \"react-google-charts\";\r\n\r\nfunction Dashboard(props) {\r\n    const [usedData, setUsedData] = useState(\"\");\r\n    const [chart, setChart] = useState(<></>);\r\n    const [domains , setDomains] = useState(\"\");\r\n    const [databases, setDatabases] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    /**\r\n     *  This functions gets the used data of the user.\r\n     *  @author Robert Boudewijn\r\n     *  @date 2020-01-19\r\n     *  @async\r\n     *  @params None\r\n     *  @return None\r\n     */\r\n    async function getUsedData() {\r\n        let request = await fetch(props.IP + \"getUsedData.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        if (request.status === 200) {\r\n            let response = await request.json();\r\n            setUsedData(response);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  This function gets all domains of the current user.\r\n     *  @author Robert Boudewijn\r\n     *  @date 2020-01-18\r\n     *  @async\r\n     *  @params None\r\n     *  @return None\r\n     */\r\n    async function getDomains() {\r\n        let request = await fetch(props.IP + \"getUserDomains.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        if (request.status === 200) {\r\n            let response = await request.json();\r\n\r\n            setDomains(response);\r\n\r\n\r\n        } else if (request.status === 401) {\r\n            //nothing user is not logged on so...\r\n        } else {\r\n            //error\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  This function gets all domains of the current user.\r\n     *  @author Robert Boudewijn\r\n     *  @date 2020-01-18\r\n     *  @async\r\n     *  @params None\r\n     *  @return None\r\n     */\r\n    async function getDatabases() {\r\n        let request = await fetch(props.IP + \"getUserDatabases.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        if (request.status === 200) {\r\n            let response = await request.json();\r\n\r\n            setDatabases(response);\r\n        } else if (request.status === 401) {\r\n            //nothing user is not logged on so...\r\n        } else {\r\n            //error\r\n        }\r\n    }\r\n\r\n        getUsedData();\r\n        getDomains();\r\n        getDatabases();\r\n    }, [props.IP])\r\n\r\n    useEffect(() => {\r\n        if (usedData !== \"\") {\r\n            setChart(<Chart\r\n                width={400}\r\n                height={300}\r\n                chartType=\"PieChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    [\"Type\", \"Amount\"],\r\n                    [\"Database\", usedData.usedDirSize - usedData.folderUsedDirSize],\r\n                    [\"Storage\", usedData.folderUsedDirSize],\r\n                    [\"Free\", usedData.maxDirSize - usedData.usedDirSize]\r\n                ]}\r\n                options={{\r\n                    title: 'Storage',\r\n                    sliceVisibilityThreshold: .00000001, //this makes sure that all slices are visible\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />)\r\n        }\r\n    },[usedData])\r\n\r\n\r\n    function returnLi(liArray){\r\n        if(typeof liArray === \"object\"){\r\n            return liArray.map(Element => <li key={Element}>{Element}</li>)\r\n        }else{\r\n            return <li>Geen gevonden</li>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Dashboard</h1>\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <h2 className=\"subtitle\">Domains:</h2>\r\n                    <div className=\"content\">\r\n                        <ul id=\"domains\">\r\n                        {returnLi(domains)}\r\n                        </ul>\r\n                    </div>\r\n                    <h2 className=\"subtitle\">Databases:</h2>\r\n                    <div className=\"content\">\r\n                        <ul id=\"databases\">\r\n                            {returnLi(databases)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column is-5-desktop \">\r\n                    {chart}\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Dashboard;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Databases(props) {\r\n    const [databases, setDatabases] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    /**\r\n     *  This function gets all domains of the current user.\r\n     *  @author Robert Boudewijn\r\n     *  @date 2020-01-18\r\n     *  @async\r\n     *  @params None\r\n     *  @return None\r\n     */\r\n    async function getDatabases() {\r\n        let request = await fetch(props.IP + \"getUserDatabases.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        if (request.status === 200) {\r\n            let response = await request.json();\r\n\r\n            setDatabases(response);\r\n        } else if (request.status === 401) {\r\n            //nothing user is not logged on so...\r\n        } else {\r\n            //error\r\n        }\r\n    }\r\n        getDatabases();\r\n    }, [props.IP])\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Databases</h1>\r\n            {databases}\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Databases;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Domains(props) {\r\n    const [domains , setDomains] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    /**\r\n     *  This function gets all domains of the current user.\r\n     *  @author Robert Boudewijn\r\n     *  @date 2020-01-18\r\n     *  @async\r\n     *  @params None\r\n     *  @return None\r\n     */\r\n    async function getDomains() {\r\n        let request = await fetch(props.IP + \"getUserDomains.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        if (request.status === 200) {\r\n            let response = await request.json();\r\n\r\n            setDomains(response);\r\n\r\n\r\n        } else if (request.status === 401) {\r\n            //nothing user is not logged on so...\r\n        } else {\r\n            //error\r\n        }\r\n    }\r\n\r\n\r\n        getDomains();\r\n    }, [props.IP])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Domains</h1>\r\n            {domains}\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Domains;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Mailboxes(props) {\r\n    const [databases, setDatabases] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    /**\r\n     *  This function gets all domains of the current user.\r\n     *  @author Robert Boudewijn\r\n     *  @date 2020-01-18\r\n     *  @async\r\n     *  @params None\r\n     *  @return None\r\n     */\r\n    async function getDatabases() {\r\n        let request = await fetch(props.IP + \"getUserDatabases.php\",\r\n            {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                // mode: 'cors',\r\n                // cache: 'no-cache',\r\n                // credentials: 'same-origin',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            }\r\n        );\r\n        if (request.status === 200) {\r\n            let response = await request.json();\r\n\r\n            setDatabases(response);\r\n        } else if (request.status === 401) {\r\n            //nothing user is not logged on so...\r\n        } else {\r\n            //error\r\n        }\r\n    }\r\n        getDatabases();\r\n    }, [props.IP])\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Databases</h1>\r\n            {databases}\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Mailboxes;","import React from 'react'; //useEffect \r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from './includes/Header';\r\nimport Aside from './includes/Aside';\r\nimport Footer from './includes/Footer';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Databases from './pages/Databases';\r\nimport Domains from './pages/Domains';\r\nimport Mailboxes from './pages/Mailboxes';\r\n\r\n\r\n/**\r\n * Main page function for the appplication. Routing is done here.\r\n *\r\n * @author Robert Boudewijn\r\n * @date 2021/01/20\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nfunction Index(props) {\r\n  return (\r\n    <Router>\r\n      <Header IP={props.IP} setCurrentScreen={props.setCurrentScreen} ></Header>\r\n      <section>\r\n        <div className=\"columns\">\r\n          <div className=\"column is-2 has-background-light CS-has-padding-left-2 CS-has-padding-top-2 CS-has-padding-bottom-2\">\r\n            <Aside IP={props.IP}></Aside>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div className=\"container CS-has-padding-left-1\">\r\n              <Switch>\r\n                <Route path=\"/Domains\">\r\n                  <Domains\r\n                    IP={props.IP}\r\n                    />\r\n                </Route>\r\n                <Route path=\"/Databases\">\r\n                  <Databases\r\n                    IP={props.IP}\r\n                    />\r\n                </Route>\r\n                <Route path=\"/Mailboxes\">\r\n                  <Mailboxes\r\n                    IP={props.IP}\r\n                  />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Dashboard\r\n                    IP={props.IP}\r\n                  />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Footer></Footer>\r\n    </Router>\r\n  );\r\n}\r\nexport default Index;","import React from 'react';\r\nimport Login from './components/Login';\r\nimport Index from './components/Index';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // IP: \"http://localhost/a_routes/\",\r\n      IP: \"https://klanten.foxels.nl/a_routes/\",\r\n      currentScreen: \"login\",\r\n    }\r\n    this.setCurrentScreen = this.setCurrentScreen.bind(this);\r\n  }\r\n\r\n  setCurrentScreen(A){\r\n    this.setState({currentScreen: A})\r\n  }\r\n\r\n\r\n  render() {\r\n    switch (this.state.currentScreen) {\r\n      case \"login\":\r\n        return (\r\n          <Login \r\n            IP={this.state.IP}\r\n            setCurrentScreen={this.setCurrentScreen}>\r\n\r\n          </Login>\r\n        );\r\n        \r\n      case \"index\":\r\n        return(\r\n        <Index\r\n          IP={this.state.IP}\r\n          setCurrentScreen={this.setCurrentScreen}\r\n        ></Index>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}